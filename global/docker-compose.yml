version: '3'
services:

  alron-nginx:
    image: 150128700443.dkr.ecr.us-east-1.amazonaws.com/autoagents:nginx-master
    container_name: alron-nginx
    restart: always
    expose:
      - "${NGINX_PORT}"
    ports:
      - "${NGINX_PORT}:${NGINX_PORT}"
    depends_on:
      - alron-backend
    environment: 
      - TZ=America/New_York 
    # volumes:
    #   - ./nginx:/etc/nginx
    networks:
      - alron-net

  alron-backend:
    image: 150128700443.dkr.ecr.us-east-1.amazonaws.com/autoagents:alron-master
    container_name: alron-backend
    hostname: ${ALRON_HOST}
    restart: always
    expose:
      - "${ALRON_PORT}"
    ports:
      - "${ALRON_PORT}:${ALRON_PORT}"
    links:
      - alron-mysql
      - alron-redis
      - alron-taskrunner
      - alron-mongo
    depends_on:
      - alron-mysql
      - alron-redis
      - alron-taskrunner
      - alron-mongo
    working_dir: /alron
    environment: 
      - TZ=America/New_York 
      - server.port=${ALRON_PORT}
      - server.host=${SERVER_HOST}
      - sys.env=${SYS_ENV}
      - spring.profiles.active=compose
      - spring.datasource.url=jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/alron?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&serverTimezone=GMT%2B8
      - spring.datasource.username=${MYSQL_USER}
      - spring.datasource.password=${MYSQL_PWD}
      - spring.redis.host=${REDIS_HOST}
      - spring.redis.port=${REDIS_PORT}
      - spring.redis.password=${REDIS_PWD}
      - storage.server=mongodb://${MONGO_USER}:${MONGO_PWD}@${MONGO_HOST}:${MONGO_PORT}/${MONGO_DB}?authSource=admin
      - taskrunner.serviceAddress=http://${TASKRUNNER_HOST}:${TASKRUNNER_PORT}/
    command: ["java","-Xms2g","-Xmx2g","-Djava.library.path=/mindsynth","-jar","mindsynth.jar"]
    volumes:
      - ./alron/data:/alron/data
      - ./alron/logs:/alron/logs
    networks:
      - alron-net

  alron-taskrunner:
    image: 150128700443.dkr.ecr.us-east-1.amazonaws.com/autoagents:taskrunner-master
    container_name: alron-taskrunner
    hostname: ${TASKRUNNER_HOST}
    restart: always
    expose:
      - "${TASKRUNNER_PORT}"
    ports:
      - "${TASKRUNNER_PORT}:${TASKRUNNER_PORT}"
    environment: 
      TZ: America/New_York 
      API_KEY: ${RAPID_API_KEY}
    networks:
      - alron-net

  alron-mysql:
    image: mysql:8.2
    container_name: alron-mysql
    hostname: ${MYSQL_HOST}
    privileged: true
    restart: always
    expose:
      - "3306"
    ports:
      - "${MYSQL_PORT_OUT}:3306"
    environment: 
      TZ: America/New_York 
      MYSQL_ROOT_PASSWORD: ${MYSQL_PWD}
      MYSQL_DATABASE: alron
      MYSQL_PASSWORD: ${MYSQL_PWD}
    command:
      --lower_case_table_names=1
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/logs:/var/log/mysql
      - ./mysql/conf.d:/etc/mysql/conf.d
      - ./mysql/init.d:/docker-entrypoint-initdb.d
    networks:
      - alron-net

  alron-redis:
    image: redis:latest
    container_name: alron-redis
    hostname: ${REDIS_HOST}
    restart: always
    expose:
      - "6379"
    ports:
      - "${REDIS_PORT_OUT}:6379"
    logging:
      driver: 'json-file'
      options:
        max-size: '5g'
    volumes:
      - ./redis/data:/data
      - ./redis/redis.conf:/etc/redis/redis.conf 
    environment: 
      - TZ=America/New_York       
    command:
      redis-server /etc/redis/redis.conf
    networks:
      - alron-net
  alron-mongo:
    image: mongo:5.0.18
    container_name: alron-mongo
    hostname: ${MONGO_HOST}
    restart: always
    ports: # 生产环境建议不要暴露
      - ${MONGO_PORT}:${MONGO_PORT}
    networks:
      - alron-net
    environment: 
      - TZ=America/New_York
      # 这里的配置只有首次运行生效。修改后，重启镜像是不会生效的。需要把持久化数据删除再重启，才有效果
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PWD}
    volumes:
      - ./mongo/data:/data/db

networks:
  alron-net:
    driver: bridge