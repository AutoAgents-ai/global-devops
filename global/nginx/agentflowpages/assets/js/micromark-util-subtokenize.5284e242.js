function _(i,n,e,r){const o=i.length;let t=0,l;if(n<0?n=-n>o?0:o+n:n=n>o?o:n,e=e>0?e:0,r.length<1e4)l=Array.from(r),l.unshift(n,e),i.splice(...l);else for(e&&i.splice(n,e);t<r.length;)l=r.slice(t,t+1e4),l.unshift(n,0),i.splice(...l),t+=1e4,n+=1e4}function I(i){const n={};let e=-1,r,o,t,l,p,c,u;for(;++e<i.length;){for(;e in n;)e=n[e];if(r=i[e],e&&r[1].type==="chunkFlow"&&i[e-1][1].type==="listItemPrefix"&&(c=r[1]._tokenizer.events,t=0,t<c.length&&c[t][1].type==="lineEndingBlank"&&(t+=2),t<c.length&&c[t][1].type==="content"))for(;++t<c.length&&c[t][1].type!=="content";)c[t][1].type==="chunkText"&&(c[t][1]._isInFirstContentOfListItem=!0,t++);if(r[0]==="enter")r[1].contentType&&(Object.assign(n,x(i,e)),e=n[e],u=!0);else if(r[1]._container){for(t=e,o=void 0;t--&&(l=i[t],l[1].type==="lineEnding"||l[1].type==="lineEndingBlank");)l[0]==="enter"&&(o&&(i[o][1].type="lineEndingBlank"),l[1].type="lineEnding",o=t);o&&(r[1].end=Object.assign({},i[o][1].start),p=i.slice(o,e),p.unshift(r),_(i,o,e-o+1,p))}}return!u}function x(i,n){const e=i[n][1],r=i[n][2];let o=n-1;const t=[],l=e._tokenizer||r.parser[e.contentType](e.start),p=l.events,c=[],u={};let d,y,f=-1,s=e,a=0,g=0;const h=[g];for(;s;){for(;i[++o][1]!==s;);t.push(o),s._tokenizer||(d=r.sliceStream(s),s.next||d.push(null),y&&l.defineSkip(s.start),s._isInFirstContentOfListItem&&(l._gfmTasklistFirstContentOfListItem=!0),l.write(d),s._isInFirstContentOfListItem&&(l._gfmTasklistFirstContentOfListItem=void 0)),y=s,s=s.next}for(s=e;++f<p.length;)p[f][0]==="exit"&&p[f-1][0]==="enter"&&p[f][1].type===p[f-1][1].type&&p[f][1].start.line!==p[f][1].end.line&&(g=f+1,h.push(g),s._tokenizer=void 0,s.previous=void 0,s=s.next);for(l.events=[],s?(s._tokenizer=void 0,s.previous=void 0):h.pop(),f=h.length;f--;){const w=p.slice(h[f],h[f+1]),k=t.pop();c.unshift([k,k+w.length-1]),_(i,k,2,w)}for(f=-1;++f<c.length;)u[a+c[f][0]]=a+c[f][1],a+=c[f][1]-c[f][0]-1;return u}export{I as s};
