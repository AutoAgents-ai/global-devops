version: '3'
services:

  nginx:
    image: registry.cn-beijing.aliyuncs.com/autoagents/libs:mindsynth-nginx-efunds
    container_name: nginx
    restart: always
    expose:
      - "${NGINX_PORT}"
    ports:
      - "${NGINX_PORT}:${NGINX_PORT}"
    depends_on:
      - mind
    # volumes:
    #   - ./nginx:/etc/nginx
    environment:
      - TZ=Asia/Shanghai
    networks:
      - srv-net

  mind:
    image: registry.cn-beijing.aliyuncs.com/autoagents/libs:mindsynth-main-efunds
    container_name: mind
    hostname: mind
    restart: always
    expose:
      - "8008"
    ports:
      - "8008:8008"
    links:
      - srv-mysql
      - srv-redis
      - srv-mongo
      - srv-pg
    depends_on:
      - srv-mysql
      - srv-redis
      - srv-mongo
      - srv-pg
    working_dir: /mindsynth
    environment:
      - TZ=Asia/Shanghai  
      - server.port=8008
      - server.host=${SERVER_HOST}
      - sys.env=${SYS_ENV}
      - spring.profiles.active=test
      - spring.datasource.mysql.jdbc_url=jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/agents?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&serverTimezone=GMT%2B8
      - spring.datasource.mysql.username=${MYSQL_USER}
      - spring.datasource.mysql.password=${MYSQL_PWD}
      - spring.datasource.postgresql.jdbcUrl=jdbc:postgresql://${PG_HOST}:${PG_PORT}/${PG_DB}?max=10&keepAlive=true&idleTimeoutMillis=30000&connectionTimeoutMillis=5000
      - spring.datasource.postgresql.username=${PG_USER}
      - spring.datasource.postgresql.password=${PG_PWD}
      - spring.redis.host=${REDIS_HOST}
      - spring.redis.port=${REDIS_PORT}
      - spring.redis.password=${REDIS_PWD}
      - spring.data.mongodb.uri=mongodb://${MONGO_USER}:${MONGO_PWD}@${MONGO_HOST}:${MONGO_PORT}/${MONGO_DB}?authSource=admin
      - storage.browser=${SERVER_HOST}${STORAGE_BROWSER}
    volumes:
      - ./mind/data:/mindsynth/data
      - ./mind/logs:/mindsynth/logs
    networks:
      - srv-net

  srv-pg:
    image: ankane/pgvector:v0.5.0 # git
    # image: registry.cn-hangzhou.aliyuncs.com/fastgpt/pgvector:v0.5.0 # 阿里云
    container_name: srv-pg
    hostname: ${PG_HOST}
    restart: always
    expose:
      - "${PG_PORT}"      
    ports: 
      - "${PG_PORT_OUT}:${PG_PORT}"
    networks:
      - srv-net
    environment:
      - TZ=Asia/Shanghai  
      # 这里的配置只有首次运行生效。修改后，重启镜像是不会生效的。需要把持久化数据删除再重启，才有效果
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PWD}
      - POSTGRES_DB=${PG_DB}
    volumes:
      - ./pg/data:/var/lib/postgresql/data
      
  srv-mysql:
    image: mysql:8.2
    container_name: srv-mysql
    hostname: ${MYSQL_HOST}
    privileged: true
    restart: always
    expose:
      - "3306"
    ports:
      - "${MYSQL_PORT_OUT}:3306"
    environment:
      TZ: Asia/Shanghai  
      MYSQL_ROOT_PASSWORD: ${MYSQL_PWD}
      MYSQL_DATABASE: ${MYSQL_DB}
      MYSQL_PASSWORD: ${MYSQL_PWD}
    command:
      --lower_case_table_names=1
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/logs:/var/log/mysql
      - ./mysql/conf.d:/etc/mysql/conf.d
      - ./mysql/init.d:/docker-entrypoint-initdb.d
    networks:
      - srv-net

  srv-redis:
    image: redis:latest
    container_name: srv-redis
    hostname: ${REDIS_HOST}
    restart: always
    expose:
      - "6379"
    ports:
      - "${REDIS_PORT_OUT}:6379"
    logging:
      driver: 'json-file'
      options:
        max-size: '5g'
    volumes:
      - ./redis/data:/data
      - ./redis/redis.conf:/etc/redis/redis.conf 
    command:
      redis-server /etc/redis/redis.conf
    environment:
      - TZ=Asia/Shanghai      
    networks:
      - srv-net

  srv-mongo:
    image: mongo:5.0.18
    container_name: srv-mongo
    hostname: ${MONGO_HOST}
    restart: always
    ports: # 生产环境建议不要暴露
      - ${MONGO_PORT_OUT}:${MONGO_PORT}
    networks:
      - srv-net
    environment:
      - TZ=Asia/Shanghai  
      # 这里的配置只有首次运行生效。修改后，重启镜像是不会生效的。需要把持久化数据删除再重启，才有效果
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PWD}
    volumes:
      - ./mongo/data:/data/db

networks:
  srv-net:
    driver: bridge